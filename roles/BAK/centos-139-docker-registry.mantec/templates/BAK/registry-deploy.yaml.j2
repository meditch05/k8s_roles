apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-registry-v0
  namespace: {{ namespace }}
  labels:
    k8s-app: kube-registry
    version: v0
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: kube-registry
        version: v0
        kubernetes.io/cluster-service: "true"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: accordion-role
                operator: In
                values:
                - {{ node_role }}
            weight: 100
      tolerations:
      - effect: NoSchedule
        key: accordion-role
        operator: Equal
        value: {{ node_role }}
      containers:
      - name: registry
        image: {{ image }}
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: REGISTRY_HTTP_ADDR
          value: :5000
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
        volumeMounts:
        - name: image-store
          mountPath: /var/lib/registry
        - name: timezone
          mountPath: /etc/localtime
        ports:
        - containerPort: 5000
          name: registry
          protocol: TCP
      volumes:
      - name: image-store
        #emptyDir: {}
        persistentVolumeClaim:
          claimName: kube-registry-pvc
      - name: timezone
        hostPath:
          path: /etc/localtime

