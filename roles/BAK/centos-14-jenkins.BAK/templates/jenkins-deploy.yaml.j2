apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  namespace: {{ jenkins_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      nodeSelector:
        k8s-role: master
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
#      affinity:
#        nodeAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - preference:
#              matchExpressions:
#              - key: accordion-role
#                operator: In
#                values:
#                - {{ jenkins_node_role }}
#            weight: 100
#      tolerations:
#      - effect: NoSchedule
#        key: accordion-role
#        operator: Equal
#        value: {{ jenkins_node_role }}
      containers:
      - image: {{ jenkins_image }}
        imagePullPolicy: IfNotPresent
        name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
          name: web
        - containerPort: 50000
          protocol: TCP
          name: slaves
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 500m
            memory: 1500Mi
        env:
          - name: CPU_REQUEST
            valueFrom:
              resourceFieldRef:
                resource: requests.cpu
          - name: CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                resource: limits.cpu
          - name: MEM_REQUEST
            valueFrom:
              resourceFieldRef:
                resource: requests.memory
                divisor: "1Mi"
          - name: MEM_LIMIT
            valueFrom:
              resourceFieldRef:
                resource: limits.memory
                divisor: "1Mi"
          - name: JAVA_OPTS
            value: "-Xmx$(MEM_REQUEST)m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 -Dhudson.Main.development=true -Djenkins.install.runSetupWizard=false"
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkinshome
        - name: timezone
          mountPath: /etc/localtime
#        - mountPath: /var/run/docker.sock
#          name: docker-socket
#          readOnly: false
#      securityContext:
#        privileged: true
#      securityContext:
#        runAsUser: 1000
#        #fsGroup: 1000
      imagePullSecrets:
      - name: regsecret
      volumes:
      - name: jenkinshome
        persistentVolumeClaim:
          claimName: jenkins-data
      - name: timezone
        hostPath:
          path: /etc/localtime
#      - name: docker-socket
#        hostPath: 
#          path: /var/run/docker.sock       
