---
# Allows you to add any config files in /usr/share/filebeat
# such as filebeat.yml
filebeatConfig:
  filebeat.yml: |
    filebeat.inputs:
    - type: docker
      containers.ids:
      - '*'
      processors:
      - add_kubernetes_metadata:
          in_cluster: true
      - drop_event:
          when:
            equals:
              kubernetes.container.name: "filebeat"

    setup.ilm.enabled: false
    # setup.ilm.rollover_alias: "filebeat"
    # setup.ilm.pattern: "{now/d}-k8smon"

    setup.template.name: "filebeat"
    setup.template.pattern: "custom" # "{now/d}-k8smon"

    output.elasticsearch:
      hosts : ["elasticsearch-master.monitoring.svc.cluster.local:9200"]
      index: "filebeat-%{[agent.version]}-k8smon-%{+yyyy.MM.dd}"

      # hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master.monitoring.svc.cluster.local:9200}'
      # index: "filebeat-%{[agent.version]}-k8s-mon-%{+yyyy.MM.dd}"
      # manage_template : false
      # index : "-s-%{[@metadata][beat]}-%{[agent.version]}-k8smon-%{+YYYY.MM.DD}"
      # pipeline => "%{[@metadata][pipeline]}"

    # EOF


# Extra environment variables to append to the DaemonSet pod spec.
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
extraEnvs: []
#  - name: MY_ENVIRONMENT_VAR
#    value: the_value_goes_here

extraVolumeMounts: []
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

extraVolumes: []
  # - name: extras
  #   emptyDir: {}

# Root directory where Filebeat will write data to in order to persist registry data across pod restarts (file position and other metadata).
hostPathRoot: /var/lib

image: "docker.elastic.co/beats/filebeat"
imageTag: "7.1.0"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

# Whether this chart should self-manage its service account, role, and associated role binding.
managedServiceAccount: true

podAnnotations: {}
  # iam.amazonaws.com/role: es-cluster

# Various pod security context settings. Bear in mind that many of these have an impact on Filebeat functioning properly.
#
# - Filesystem group for the Filebeat user. The official elastic docker images always have an id of 1000.
# - User that the container will execute as. Typically necessary to run as root (0) in order to properly collect host container logs.
# - Whether to execute the Filebeat containers as privileged containers. Typically not necessarily unless running within environments such as OpenShift.
podSecurityContext:
  fsGroup: 1000
  runAsUser: 0
#  privileged: false

resources:
  requests:
    cpu: "100m"
    memory: "100Mi"
  limits:
    cpu: "1000m"
    memory: "200Mi"

# Custom service account override that the pod will use
serviceAccount: ""

# A list of secrets and their paths to mount inside the pod
# This is useful for mounting certificates for security other sensitive values
secretMounts: []
#  - name: filebeat-certificates
#    secretName: filebeat-certificates
#    path: /usr/share/filebeat/certs

# How long to wait for Filebeat pods to stop gracefully
terminationGracePeriod: 30

tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists

updateStrategy: RollingUpdate

# Override various naming aspects of this chart
# Only edit these if you know what you're doing
nameOverride: ""
fullnameOverride: ""
