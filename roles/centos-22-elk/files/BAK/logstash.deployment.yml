---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: monitoring
data:
  logstash.yml: |-
    node.name: logstash.custom
  
    http.host: "0.0.0.0"
    http.port: 9600

    # path.config: "/usr/share/logstash/pipeline/" # Default

    xpack.monitoring.enabled: true
    xpack.monitoring.elasticsearch.hosts: [ "http://elasticsearch-master.monitoring.svc.cluster.local:9200" ]

    # EOF  

  pipelines.yml: |-
    - pipeline.id: accesslog_skt
      pipeline.workers: 1
      pipeline.batch.size: 1
      path.config: "/usr/share/logstash/pipeline/mtwd-accesslog-parse.conf"
  
    #- pipeline.id: test
    #  pipeline.workers: 1
    #  pipeline.batch.size: 1
    #  config.string: "input { generator {} } filter { sleep { time => 1 } } output { stdout { codec => dots } }"
    #
    #    - pipeline.id: another_test
    #      queue.type: persisted
    #      path.config: "/tmp/logstash/*.config"
    # EOF

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  namespace: monitoring
data:
  mtwd-accesslog-parse.conf: |-
    input {
      beats {
        host => "0.0.0.0"
        port => "5044"
      }
    }
    filter {
      grok {
        match => { "message" => "%{IPORHOST:clientip} (?:-|%{USER:ident}) (?:-|%{USER:auth}) \[%{HTTPDATE:time}\] %{NUMBER:response_code}_code %{NUMBER:bytes}_bytes %{NUMBER:usecs}_usecs \"%{WORD:method} %{DATA:url} HTTP/%{BASE16FLOAT:http_version}\" \"%{DATA:referrer}\" \"%{DATA:agent}\" \[%{DATA:cookie}\] \[%{DATA:domain}\] \[%{DATA:accept}\]" }
      }
      date {
        match => ["time", "dd/MMM/yyyy:HH:mm:ss Z"]
      }
      geoip {
        source => "clientip"
      }
      mutate {
        remove_field => ["ident", "auth", "cookie", "domain", "accept", "message", "time"]
      }
    }
    output {
      stdout { codec => rubydebug }
      elasticsearch {
        hosts => ["http://elasticsearch-master.monitoring.svc.cluster.local:9200"]
        index => "logstash-%{[@metadata][beat]}-mobile.twd-%{+YYYY.MM.dd}-1"
      }
    }
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: logstash-custom
  namespace: monitoring
spec:
  template:
    metadata:
      labels:
        app: logstash-for-accesslog
    spec:
      containers:
      - name: logstash
        ports:
          - containerPort: 5044
            name: filebeat
          - containerPort: 9600
            name: logstash
        image: docker.elastic.co/logstash/logstash:7.1.0
        volumeMounts:
        - name: logstash-config   # for default logstash.yml
          mountPath: /usr/share/logstash/config/
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline/
        command:
        - logstash
        #- -f
        #- /usr/share/logstash/pipeline/mtwd-accesslog-parse.conf
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
          defaultMode: 420
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline
          defaultMode: 420
      nodeSelector:
        node-role.kubernetes.io/management: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: logstash-for-accesslog
  ports:
  - name: filebeat
    protocol: TCP
    port: 5044
    targetPort: 5044
    nodePort: 31000
  - name: logstash
    protocol: TCP
    port: 9600
    targetPort: 9600
    nodePort: 31001
